package org.web3j.aion.tx

import assertk.assertThat
import assertk.assertions.isEqualTo
import org.junit.Test
import org.web3j.aion.crypto.AionTransaction
import org.web3j.aion.crypto.AionTransactionType
import org.web3j.aion.crypto.Ed25519KeyPair
import org.web3j.aion.protocol.Aion
import org.web3j.protocol.http.HttpService

class AionTransactionManagerTest {

    private val manager = AionTransactionManager(
        Aion.build(HttpService()), ACCOUNT,
        Ed25519KeyPair(PUBLIC_KEY, PRIVATE_KEY)
    )

    @Test
    fun `sign raw transaction constructor`() {
        val aionTransaction = AionTransaction(
            data = "0x605060405234156100105760006000fd5b604051610469380380610469833981016040528080518201919060100150505b5b3360006000508282909180600101839055555050505b8060026000509080519060100190610060929190610068565b505b5061011a565b8280546001816001161561010002031660029004906000526010600020905090600f016010900481019282600f106100ab57805160ff19168380011785556100de565b828001600101855582156100de579182015b828111156100dd57825182600050909055916010019190600101906100bd565b5b5090506100eb91906100ef565b5090565b61011791906100f9565b8082111561011357600081815060009055506001016100f9565b5090565b90565b610340806101296000396000f30060506040526000356c01000000000000000000000000900463ffffffff16806341c0e1b5146100495780634ac0d66e1461005f578063cfae3217146100c157610043565b60006000fd5b34156100555760006000fd5b61005d610151565b005b341561006b5760006000fd5b6100bf6004808035906010019082018035906010019191908080600f01601080910402601001604051908101604052809392919081815260100183838082843782019150505050505090909190505061017b565b005b34156100cd5760006000fd5b6100d5610199565b6040518080601001828103825283818151815260100191508051906010019080838360005b838110156101165780820151818401525b6010810190506100fa565b50505050905090810190600f1680156101435780820380516001836010036101000a031916815260100191505b509250505060405180910390f35b60006000508060010154905433909114919014161561017857600060005080600101549054ff5b5b565b806002600050908051906010019061019492919061024b565b505b50565b6101a16102d2565b60026000508054600181600116156101000203166002900480600f01601080910402601001604051908101604052809291908181526010018280546001816001161561010002031660029004801561023c5780600f1061020f5761010080835404028352916010019161023c565b8201919060005260106000209050905b81548152906001019060100180831161021f57829003600f168201915b50505050509050610248565b90565b8280546001816001161561010002031660029004906000526010600020905090600f016010900481019282600f1061028e57805160ff19168380011785556102c1565b828001600101855582156102c1579182015b828111156102c057825182600050909055916010019190600101906102a0565b5b5090506102ce91906102e9565b5090565b601060405190810160405280600081526010015090565b61031191906102f3565b8082111561030d57600081815060009055506001016102f3565b5090565b905600a165627a7a72305820123c90d8d490b8d315d013e25883bfa13527def3322565fdb8c0b6fd4fae93710029000000000000000000000000000000100000000000000000000000000000000941696f6e20746573740000000000000000000000000000000000000000000000",
            timestamp = 1560357094035000,
            type = AionTransactionType.FVM,
            nrgPrice = 10000000000,
            nrg = 4000000,
            nonce = 25
        )
        assertThat(manager.sign(aionTransaction)).isEqualTo(
            "0xf90527198080b904a9605060405234156100105760006000fd5b604051610469380380610469833981016040528080518201919060100150505b5b3360006000508282909180600101839055555050505b8060026000509080519060100190610060929190610068565b505b5061011a565b8280546001816001161561010002031660029004906000526010600020905090600f016010900481019282600f106100ab57805160ff19168380011785556100de565b828001600101855582156100de579182015b828111156100dd57825182600050909055916010019190600101906100bd565b5b5090506100eb91906100ef565b5090565b61011791906100f9565b8082111561011357600081815060009055506001016100f9565b5090565b90565b610340806101296000396000f30060506040526000356c01000000000000000000000000900463ffffffff16806341c0e1b5146100495780634ac0d66e1461005f578063cfae3217146100c157610043565b60006000fd5b34156100555760006000fd5b61005d610151565b005b341561006b5760006000fd5b6100bf6004808035906010019082018035906010019191908080600f01601080910402601001604051908101604052809392919081815260100183838082843782019150505050505090909190505061017b565b005b34156100cd5760006000fd5b6100d5610199565b6040518080601001828103825283818151815260100191508051906010019080838360005b838110156101165780820151818401525b6010810190506100fa565b50505050905090810190600f1680156101435780820380516001836010036101000a031916815260100191505b509250505060405180910390f35b60006000508060010154905433909114919014161561017857600060005080600101549054ff5b5b565b806002600050908051906010019061019492919061024b565b505b50565b6101a16102d2565b60026000508054600181600116156101000203166002900480600f01601080910402601001604051908101604052809291908181526010018280546001816001161561010002031660029004801561023c5780600f1061020f5761010080835404028352916010019161023c565b8201919060005260106000209050905b81548152906001019060100180831161021f57829003600f168201915b50505050509050610248565b90565b8280546001816001161561010002031660029004906000526010600020905090600f016010900481019282600f1061028e57805160ff19168380011785556102c1565b828001600101855582156102c1579182015b828111156102c057825182600050909055916010019190600101906102a0565b5b5090506102ce91906102e9565b5090565b601060405190810160405280600081526010015090565b61031191906102f3565b8082111561030d57600081815060009055506001016102f3565b5090565b905600a165627a7a72305820123c90d8d490b8d315d013e25883bfa13527def3322565fdb8c0b6fd4fae93710029000000000000000000000000000000100000000000000000000000000000000941696f6e2074657374000000000000000000000000000000000000000000000087058b22f2500e38833d09008800000002540be40001b86008fe2bf5757b8261d4937f13b5815448f2144f9c1409a3fab4c99ca86fff8a36e7714f6dc1a449cd77574240f2fda38474eeabd68aae0c0418b1564a0416eece7dc9d6552e7ec37ee8a3c4df6605ccde0396512a69b2edeeed8c97c36abdb80a"
        )
    }

    @Test
    fun `sign raw transaction call`() {
        val aionTransaction = AionTransaction(
            data = "0x4ac0d66e000000000000000000000000000000100000000000000000000000000000000e48657920796f7520616761696e21000000000000000000000000000000000000",
            to = "0xa0db10f717b33fc4117f7e82a6b8cc575aa130411ab00591a990971e8a1d1bb6",
            timestamp = 1560447038176000,
            type = AionTransactionType.FVM,
            nrgPrice = 10000000000,
            nrg = 54321,
            nonce = 35
        )
        assertThat(manager.sign(aionTransaction)).isEqualTo(
            "0xf8e023a0a0db10f717b33fc4117f7e82a6b8cc575aa130411ab00591a990971e8a1d1bb680b8444ac0d66e000000000000000000000000000000100000000000000000000000000000000e48657920796f7520616761696e2100000000000000000000000000000000000087058b37e366bb0082d4318800000002540be40001b86008fe2bf5757b8261d4937f13b5815448f2144f9c1409a3fab4c99ca86fff8a3678d0e91ee92387877a1a7df20fc65028000ab4d26676104756064405825d75b83294f64d7b2babb88c5786371ce3409bfc85dc6baf4fd31a697220c3c806870f"
        )
    }

    companion object {
        const val ACCOUNT = "0xa0c57475b6a30901b2348c1071d7b27a471f43f8bf895d04b73db08e659efe99"

        const val PUBLIC_KEY = "08fe2bf5757b8261d4937f13b5815448f2144f9c1409a3fab4c99ca86fff8a36"

        const val PRIVATE_KEY = "0x4776895c43f77676cdec51a6c92d2a1bacdf16ddcc6e7e07ab39104b42e1e52608fe2bf5757b8261d4" +
            "937f13b5815448f2144f9c1409a3fab4c99ca86fff8a36"
    }
}